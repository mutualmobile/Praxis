name: Build and Deploy
on:
  push:
    branches:
      - master

jobs:
  build_and_deploy_release:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Send CI/CD start message on slack
        uses: act10ns/slack@v1
        id: slack_message_start
        with:
            status: starting
            message: Starting to generate Release build for `build number {{ env.GITHUB_RUN_NUMBER }}` on branch `{{env.GITHUB_HEAD_REF}}`
        if: always()

      - name: Checkout code
        id: checkout_code
        uses: actions/checkout@v2

      - name: Setup JDK 11
        id: setup_jdk
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: 11

      - name: Decode Keystore
        id: decode_keystore
        env:
            APP_CENTER_SECRET_DEVELOPMENT: ${{ secrets.APP_CENTER_SECRET_DEVELOPMENT }}
        run: |
            touch ./local.properties
            echo APP_CENTER_SECRET_DEVELOPMENT=\"$APP_CENTER_SECRET_DEVELOPMENT\" >> ./local.properties
            cat ./local.properties

      - uses: actions/cache@v3
        name: Cache Gradle for quicker builds
        id: caching_gradle
        with:
          path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate Build
        id: generate_build
        if: always()
        run: ./gradlew assembleRelease --stacktrace --info

      - name: Sign APK
        id: sign_app
        if: always()
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release/
          signingKeyBase64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
          alias: ${{ secrets.RELEASE_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.RELEASE_STORE_PASSWORD }}
          keyPassword: ${{ secrets.RELEASE_KEY_PASSWORD }}

      - name: Upload to App Center and distribute
        id: upload_to_app_center_and_distribute
        if: always()
        uses: wzieba/AppCenter-Github-Action@v1
        with:
          appName: Mutual-Mobile-Organization/MM-Praxis
          token: ${{ secrets.APP_CENTER_TOKEN_SECRET }}
          group: Internal
          file: ${{ steps.sign_app.outputs.signedReleaseFile }}
          notifyTesters: true
          debug: true

      - name: Send CI/CD end message on slack
        uses: act10ns/slack@v1
        id: slack_message_end
        with:
            status: ${{ job.status }}
            steps: ${{ toJson(steps) }}
        if: always()